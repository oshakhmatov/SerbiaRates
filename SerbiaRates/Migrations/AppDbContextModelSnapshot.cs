// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SerbiaRates.Data;

#nullable disable

namespace SerbiaRates.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.AverageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<int>("DailyAverageRateCoupleId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DailyAverageRateCoupleId");

                    b.ToTable("AverageRate");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.DailyAverageRateCouple", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("DailyAverageRateCouples");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.DailyRateCouple", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("DailyRateCouples");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.ExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Buy")
                        .HasColumnType("numeric");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<int>("DailyRateCoupleId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Sell")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DailyRateCoupleId");

                    b.ToTable("ExchangeRates");
                });

            modelBuilder.Entity("SerbiaRates.Modules.Shared.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.AverageRate", b =>
                {
                    b.HasOne("SerbiaRates.Modules.Shared.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SerbiaRates.Modules.ExchangeRates.DailyAverageRateCouple", "DailyAverageRateCouple")
                        .WithMany("Rates")
                        .HasForeignKey("DailyAverageRateCoupleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("DailyAverageRateCouple");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.DailyRateCouple", b =>
                {
                    b.HasOne("SerbiaRates.Modules.ExchangeRates.Company", "Company")
                        .WithMany("DailyRateCouples")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.ExchangeRate", b =>
                {
                    b.HasOne("SerbiaRates.Modules.Shared.Currency", "Currency")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SerbiaRates.Modules.ExchangeRates.DailyRateCouple", "DailyRateCouple")
                        .WithMany("Rates")
                        .HasForeignKey("DailyRateCoupleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("DailyRateCouple");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.Company", b =>
                {
                    b.Navigation("DailyRateCouples");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.DailyAverageRateCouple", b =>
                {
                    b.Navigation("Rates");
                });

            modelBuilder.Entity("SerbiaRates.Modules.ExchangeRates.DailyRateCouple", b =>
                {
                    b.Navigation("Rates");
                });

            modelBuilder.Entity("SerbiaRates.Modules.Shared.Currency", b =>
                {
                    b.Navigation("ExchangeRates");
                });
#pragma warning restore 612, 618
        }
    }
}
